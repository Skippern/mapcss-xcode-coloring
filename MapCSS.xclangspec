(
	{
		Identifier = "xcode.lang.mapcss.identifier";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-@!#";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-#";
			Words = (
				"*",
				node,
				point,
				way,
				line,
				area,
				relation,
				meta,
				canvas,
				"@media",
				"@type",
				"@values",
				"@default_value",
				"@default_other",
				"@postprocess",
				"@depend_property",
				"@import",
				"@style_element_propery",
			);
			Type = "xcode.syntax.keyword";
			AltType = "xcode.syntax.identifier";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.colorword";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Words = (
				aliceblue,
				antiquewhite,
				aqua,
				aquamarine,
				azure,
				beige,
				bisque,
				black,
				blanchedalmond,
				blue,
				blueviolet,
				brown,
				burlywood,
				cadetblue,
				chartreuse,
				chocolate,
				coral,
				cornflowerblue,
				cornsilk,
				crimson,
				cyan,
				darkblue,
				darkcyan,
				darkgoldenrod,
				darkgray,
				darkgreen,
				darkgrey,
				darkkhaki,
				darkmagenta,
				darkolivegreen,
				darkorange,
				darkorchid,
				darkred,
				darksalmon,
				darkseagreen,
				darkslateblue,
				darkslategray,
				darkslategrey,
				darkturquoise,
				darkviolet,
				deeppink,
				deepskyblue,
				dimgray,
				dimgrey,
				dodgerblue,
				firebrick,
				floralwhite,
				forestgreen,
				fuchsia,
				gainsboro,
				ghostwhite,
				gold,
				goldenrod,
				gray,
				green,
				greenyellow,
				grey,
				honeydew,
				hotpink,
				indianred,
				indigo,
				ivory,
				khaki,
				lavender,
				lavenderblush,
				lawngreen,
				lemonchiffon,
				lightblue,
				lightcoral,
				lightcyan,
				lightgoldenrodyellow,
				lightgray,
				lightgreen,
				lightgrey,
				lightpink,
				lightsalmon,
				lightseagreen,
				lightskyblue,
				lightslategray,
				lightslategrey,
				lightsteelblue,
				lightyellow,
				lime,
				limegreen,
				linen,
				magenta,
				maroon,
				mediumaquamarine,
				mediumblue,
				mediumorchid,
				mediumpurple,
				mediumseagreen,
				mediumslateblue,
				mediumspringgreen,
				mediumturquoise,
				mediumvioletred,
				midnightblue,
				mintcream,
				mistyrose,
				moccasin,
				navajowhite,
				navy,
				oldlace,
				olive,
				olivedrab,
				orange,
				orangered,
				orchid,
				palegoldenrod,
				palegreen,
				paleturquoise,
				palevioletred,
				papayawhip,
				peachpuff,
				peru,
				pink,
				plum,
				powderblue,
				purple,
				red,
				rosybrown,
				royalblue,
				saddlebrown,
				salmon,
				sandybrown,
				seagreen,
				seashell,
				sienna,
				silver,
				skyblue,
				slateblue,
				slategray,
				slategrey,
				snow,
				springgreen,
				steelblue,
				tan,
				teal,
				thistle,
				tomato,
				turquoise,
				violet,
				wheat,
				white,
				whitesmoke,
				yellow,
				yellowgreen,
			);
			Type = "xcode.syntax.number";
			AltType = "xcode.syntax.identifier";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.styles";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-";
			Words = (
				set,
				text,
				opacity,
				color,
				antialiasing,
				"fill-color",
				"fill-opacity",
				"fill-image",
				"z-index",
				"major-z-index",
				"object-z-index",
				modifier,
				width,
				dashes,
				"dashes-offset",
				"dashes-background-color",
				"dashes-background-opacity",
				image,
				linecap,
				linejoin,
				"casing-width",
				"casing-color",
				"casing-opacity",
				"casing-dashes",
				"casing-linecap",
				"casing-linejoin",
				"left-casing-width",
				"left-casing-color",
				"left-casing-opacity",
				"left-casing-dashes",
				"left-casing-linecap",
				"left-casing-linejoin",
				"right-casing-width",
				"right-casing-color",
				"right-casing-opacity",
				"right-casing-dashes",
				"right-casing-linecap",
				"right-casing-linejoin",
				extrude,
				"extrude-edge-color",
				"extrude-edge-opacity",
				"extrude-face-color",
				"extrude-face-opacity",
				"icon-image",
				"icon-width",
				"icon-height",
				"icon-opacity",
				"font-family",
				"font-size",
				"font-weight",
				"font-style",
				"font-variant",
				"text-decoration",
				"text-transform",
				"text-color",
				"text-opacity",
				"text-offset",
				"text-position",
				"max-width",
				text,
				"text-halo-color",
				"text-halo-radius",
				"shield-color",
				"shield-opacity",
				"shield-frame-color",
				"shield-frame-width",
				"shield-casing-color",
				"shield-casing-width",
				"shield-text",
				"shield-image",
				"shield-shape",
				"symbol-shape",
				"symbol-size",
				"symbol-stroke-width",
				"symbol-stroke-color",
				"symbol-stroke-opacity",
				"symbol-fill-color",
				"symbol-fill-opacity",
				"text-anchor-horizontal",
				"text-anchor-vertical",
				offset,
				"repeat-image",
				"repeat-image-width",
				"repeat-image-height",
				"repeat-image-align",
				"repeat-image-offset",
				"repeat-image-spacing",
				"repeat-image-phase",
				"user-agent",
				renderer,
				"renderer-version",
				"min-renderer-version",
				"max-renderer-version",
				"pgmapcss-version",
				"min-pgmapcss-version",
				"max-pgmapcss-version",
				"josm-version",
				"min-josm-version",
				"max-josm-version",
			);
			Type = "xcode.syntax.definition.class";
			AltType = "xcode.syntax.identifier";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.values";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-";
			Words = (
				pgmapcss,
				josm,
				bold,
				normal,
				italic,
				"small-caps",
				none,
				underline,
				uppercase,
				lowercase,
				capitalize,
				auto,
				rounded,
				rectangular,
				true,
				false,
				yes,
				no,
				square,
				round,
				miter,
				bevel,
				circle,
				triangle,
				pentagon,
				hexagon,
				heptagon,
				octogon,
				nonagon,
				decagon,
				left,
				right,
				center,
				above,
				top,
				bottom,
				below,
				default,
				thinnest,
			);
			Type = "xcode.syntax.identifier.constant";
			AltType = "xcode.syntax.identifier";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.hexcolor";
		Syntax = {
			StartChars = "#";
			Chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Match = (
				"^#[0-9a-fA-F]([0-9a-fA-F])?%?",
			);
			Type = "xcode.syntax.number";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.number";
		Syntax = {
			StartChars = "0123456789-+.";
			Chars = "0123456789.%";
			Match = (
				"^[-+]?[0-9]+(\\.[0-9]+)?%?",
				"^[-+]?\\.[0-9]+%?",
			);
			Type = "xcode.syntax.number";
		};
	},
	{
		Identifier = "xcode.lang.mapcss";
		Description = "MapCSS Coloring";
		BasedOn = "xcode.lang.simpleColoring";
		IncludeInMenu = YES;
		Name = MapCSS;
		Syntax = {
			Tokenizer = "xcode.lang.mapcss.lexer";
			IncludeRules = (
				"xcode.lang.mapcss.style",
				"xcode.lang.mapcss.block",
			);
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.lexer";
		Syntax = {
			IncludeRules = (
				"xcode.lang.comment",
				"xcode.lang.string",
				"xcode.lang.string.singlequote",
				"xcode.lang.mapcss.hexcolor",
				"xcode.lang.mapcss.number",
				"xcode.lang.mapcss.identifier",
				"xcode.lang.mapcss.colorword",
				"xcode.lang.mapcss.styles",
				"xcode.lang.mapcss.values",
			);
		};
	},
	{
		Identifier = "xcode.lang.mapcss.style";
		Syntax = {
			Tokenizer = "xcode.lang.mapcss.lexer";
			Start = "[";
			End = "]";
			Rules = (
				"xcode.lang.mapcss.style.name",
			);
			Type = "xcode.syntax.method.declarator";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.style.name";
		Syntax = {
			Tokenizer = "xcode.lang.mapcss.lexer";
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!/.*\"";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!/.*\"_-'~?^><=()|\\;:";
			Type = "xcode.syntax.entity";
		};
	},
	{
		Identifier = "xcode.lang.mapcss.block";
		Syntax = {
			Tokenizer = "xcode.lang.mapcss.lexer";
			Start = "{";
			End = "}";
			Foldable = YES;
			Recursive = YES;
		};
	},
)